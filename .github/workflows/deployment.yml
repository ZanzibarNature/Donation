name: DockerHub

on: push

jobs:
  build-dev:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'

    steps:
      - name: Checkout dev
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x

      - name: Restore
        run: dotnet restore
        working-directory: ./Donation
      
      - name: Build
        run: dotnet build --configuration Release --no-restore
        working-directory: ./Donation

      - name: Run tests
        run: dotnet test --no-build --verbosity normal
        working-directory: ./Donation
  build-main:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout main
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x

      - name: Restore
        run: dotnet restore
        working-directory: ./Donation
      
      - name: Build
        run: dotnet build --configuration Release --no-restore
        working-directory: ./Donation

      - name: Run tests
        run: dotnet test --no-build --verbosity normal
        working-directory: ./Donation
  push-dev-dockerhub:
    runs-on: ubuntu-latest
    needs: build-dev

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          platforms: linux/amd64,linux/arm64
          tags: zanzibarinh/donation-dev:latest
  push-main-dockerhub:
    runs-on: ubuntu-latest
    needs: build-main

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push        
        uses: docker/build-push-action@v5
        with:
          push: true
          platforms: linux/amd64,linux/arm64
          tags: zanzibarinh/donation-prod:latest
  deploy-dev:
    runs-on: ubuntu-latest
    needs: push-dev-dockerhub

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Authenticate and set context
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          insecure_skip_tls_verify: true
          namespace: kawa-foundation-app-dev

      - name: Get OpenShift token
        run: |
          echo TOKEN=$(oc whoami --show-token) >> $GITHUB_OUTPUT
        id: get_token_step
      
      - name: Get public key from GitHub secrets
        run: |
          response=$(curl -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/orgs/ZanzibarNature/actions/secrets/public-key)
          echo KEY_ID=$(echo "$response" | jq -r '.key_id') >> $GITHUB_OUTPUT
        id: get_key_step

      - name: Update GitHub secret with new OPENSHIFT_TOKEN
        run: |
          echo "Updating OPENSHIFT_TOKEN secret"
          curl -L \
            -X PUT \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/orgs/ZanzibarNature/actions/secrets/OPENSHIFT_TOKEN \
            -d '{"encrypted_value":"'"$(echo -n "${{ steps.get_token_step.outputs.TOKEN }}" | base64)"'", "key_id":"'"${{ steps.get_key_step.outputs.KEY_ID }}"'", "visibility":"all"'

      
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
 
      - name: Deploy with Helm
        run: helm upgrade --install donation-dev docker-compose-dev/
  deploy-prod:
    runs-on: ubuntu-latest
    needs: push-main-dockerhub

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Authenticate and set context
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          insecure_skip_tls_verify: true
          namespace: kawa-foundation-app
          
      - name: Get OpenShift token
        run: |
          echo TOKEN=$(oc whoami --show-token) >> $GITHUB_OUTPUT
        id: get_token_step
      
      - name: Get public key from GitHub secrets
        run: |
          response=$(curl -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/orgs/ZanzibarNature/actions/secrets/public-key)
          echo KEY_ID=$(echo "$response" | jq -r '.key_id') >> $GITHUB_OUTPUT
        id: get_key_step

      - name: Update GitHub secret with new OPENSHIFT_TOKEN
        run: |
          echo "Updating OPENSHIFT_TOKEN secret"
          curl -L \
            -X PUT \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/orgs/ZanzibarNature/actions/secrets/OPENSHIFT_TOKEN \
            -d '{"encrypted_value":"'"$(echo -n "${{ steps.get_token_step.outputs.TOKEN }}" | base64)"'", "key_id":"'"${{ steps.get_key_step.outputs.KEY_ID }}"'", "visibility":"all"'
      
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
 
      - name: Deploy with Helm
        run: helm upgrade --install donation-prod docker-compose-prod/